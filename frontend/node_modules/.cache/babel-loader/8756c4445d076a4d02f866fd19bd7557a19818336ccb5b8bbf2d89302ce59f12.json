{"ast":null,"code":"var _jsxFileName = \"G:\\\\TEDUSchedulerOA\\\\frontend\\\\src\\\\components\\\\TimeSlotLocker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeSlotLocker = ({\n  timeSlots = [],\n  onLockChange\n}) => {\n  _s();\n  const [lockedSlots, setLockedSlots] = useState([]);\n\n  // Generate default time slots if none provided\n  const defaultTimeSlots = ['Monday 09:00-10:00', 'Monday 10:00-11:00', 'Monday 11:00-12:00', 'Tuesday 09:00-10:00', 'Tuesday 10:00-11:00', 'Tuesday 11:00-12:00', 'Wednesday 09:00-10:00', 'Wednesday 10:00-11:00', 'Wednesday 11:00-12:00', 'Thursday 09:00-10:00', 'Thursday 10:00-11:00', 'Thursday 11:00-12:00', 'Friday 09:00-10:00', 'Friday 10:00-11:00', 'Friday 11:00-12:00'];\n  const slotsToShow = timeSlots.length > 0 ? timeSlots : defaultTimeSlots;\n  const toggleLock = slot => {\n    const updatedLocks = lockedSlots.includes(slot) ? lockedSlots.filter(s => s !== slot) : [...lockedSlots, slot];\n    setLockedSlots(updatedLocks);\n    if (onLockChange) {\n      onLockChange(updatedLocks);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-slot-locker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Lock Time Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: slotsToShow.map((slot, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: lockedSlots.includes(slot),\n            onChange: () => toggleLock(slot)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), slot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(TimeSlotLocker, \"4IsInFXPMso0qezyfx4SIYhpEHg=\");\n_c = TimeSlotLocker;\nexport default TimeSlotLocker;\nvar _c;\n$RefreshReg$(_c, \"TimeSlotLocker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TimeSlotLocker","timeSlots","onLockChange","_s","lockedSlots","setLockedSlots","defaultTimeSlots","slotsToShow","length","toggleLock","slot","updatedLocks","includes","filter","s","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","checked","onChange","_c","$RefreshReg$"],"sources":["G:/TEDUSchedulerOA/frontend/src/components/TimeSlotLocker.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst TimeSlotLocker = ({ timeSlots = [], onLockChange }) => {\n    const [lockedSlots, setLockedSlots] = useState([]);\n\n    // Generate default time slots if none provided\n    const defaultTimeSlots = [\n        'Monday 09:00-10:00', 'Monday 10:00-11:00', 'Monday 11:00-12:00',\n        'Tuesday 09:00-10:00', 'Tuesday 10:00-11:00', 'Tuesday 11:00-12:00',\n        'Wednesday 09:00-10:00', 'Wednesday 10:00-11:00', 'Wednesday 11:00-12:00',\n        'Thursday 09:00-10:00', 'Thursday 10:00-11:00', 'Thursday 11:00-12:00',\n        'Friday 09:00-10:00', 'Friday 10:00-11:00', 'Friday 11:00-12:00'\n    ];\n    \n    const slotsToShow = timeSlots.length > 0 ? timeSlots : defaultTimeSlots;\n\n    const toggleLock = (slot) => {\n        const updatedLocks = lockedSlots.includes(slot)\n            ? lockedSlots.filter(s => s !== slot)\n            : [...lockedSlots, slot];\n\n        setLockedSlots(updatedLocks);\n        if (onLockChange) {\n            onLockChange(updatedLocks);\n        }\n    };\n\n    return (\n        <div className=\"time-slot-locker\">\n            <h3>Lock Time Slots</h3>\n            <ul>\n                {slotsToShow.map((slot, index) => (\n                    <li key={index}>\n                        <label>\n                            <input\n                                type=\"checkbox\"\n                                checked={lockedSlots.includes(slot)}\n                                onChange={() => toggleLock(slot)}\n                            />\n                            {slot}\n                        </label>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TimeSlotLocker;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,SAAS,GAAG,EAAE;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMS,gBAAgB,GAAG,CACrB,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAChE,qBAAqB,EAAE,qBAAqB,EAAE,qBAAqB,EACnE,uBAAuB,EAAE,uBAAuB,EAAE,uBAAuB,EACzE,sBAAsB,EAAE,sBAAsB,EAAE,sBAAsB,EACtE,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,CACnE;EAED,MAAMC,WAAW,GAAGN,SAAS,CAACO,MAAM,GAAG,CAAC,GAAGP,SAAS,GAAGK,gBAAgB;EAEvE,MAAMG,UAAU,GAAIC,IAAI,IAAK;IACzB,MAAMC,YAAY,GAAGP,WAAW,CAACQ,QAAQ,CAACF,IAAI,CAAC,GACzCN,WAAW,CAACS,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,IAAI,CAAC,GACnC,CAAC,GAAGN,WAAW,EAAEM,IAAI,CAAC;IAE5BL,cAAc,CAACM,YAAY,CAAC;IAC5B,IAAIT,YAAY,EAAE;MACdA,YAAY,CAACS,YAAY,CAAC;IAC9B;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BjB,OAAA;MAAAiB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBrB,OAAA;MAAAiB,QAAA,EACKT,WAAW,CAACc,GAAG,CAAC,CAACX,IAAI,EAAEY,KAAK,kBACzBvB,OAAA;QAAAiB,QAAA,eACIjB,OAAA;UAAAiB,QAAA,gBACIjB,OAAA;YACIwB,IAAI,EAAC,UAAU;YACfC,OAAO,EAAEpB,WAAW,CAACQ,QAAQ,CAACF,IAAI,CAAE;YACpCe,QAAQ,EAAEA,CAAA,KAAMhB,UAAU,CAACC,IAAI;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,EACDV,IAAI;QAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC,GARHE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACjB,EAAA,CA5CIH,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AA8CpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}